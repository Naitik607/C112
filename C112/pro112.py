# -*- coding: utf-8 -*-
"""Pro112.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nK8MvXJj1DyfTH_768d_nJqjwxR4eekh
"""

from google.colab import files
data_to_upload = files.upload()

import pandas as pd
import statistics as st
import plotly.express as px

df = pd.read_csv('savings_data.csv')

# quant_saved	female	highschool_completed	wealthy

# let 'reminder' be 'wealthy'

fig = px.scatter(df,y = 'quant_saved',color = 'wealthy' )
fig.show()

import csv 

with open('savings_data.csv',newline='') as f:
  reader = csv.reader(f)
  savings_data = list(reader)

savings_data.pop(0)

total_entries = len(savings_data)
total_people_given_reminder = 0
for data in savings_data:
  if int(data[3]) == 1:
    total_people_given_reminder += 1

import plotly.graph_objects as go

fig = go.Figure(go.Bar(x=["Not reminded","Reminded"],y=[total_people_given_reminder,(total_entries-total_people_given_reminder)]))
fig.show()

all_savings = []
for data in savings_data:
  all_savings.append(float(data[0]))

print(f"mean of savings- {st.mean(all_savings)}")
print(f"median of savings- {st.median(all_savings)}")
print(f"mode of savings- {st.mode(all_savings)}")

reminded_savings = []
not_reminded_savings = []

for data in savings_data:
  if int(data[3]) == 1:
    reminded_savings.append(float(data[0]))
  else:
    not_reminded_savings.append(float(data[0]))

print("results for people who were reminded to save ")
print(f"mean of savings - {st.mean(reminded_savings)}")
print(f"median of savings - {st.median(reminded_savings)}")
print(f"mode of savings - {st.mode(reminded_savings)}")

print("\n\n")
print("results for people who were not reminded to save ")
print(f"mean of savings - {st.mean(not_reminded_savings)}")
print(f"median of savings - {st.median(not_reminded_savings)}")
print(f"mode of savings - {st.mode(not_reminded_savings)}")

print(f"standard deviation of all the data-> {st.stdev(all_savings)}")
print(f"standard deviation of people who were reminded-> {st.stdev(reminded_savings)}")
print(f"standard deviation of people who were not reminded-> {st.stdev(not_reminded_savings)}")

import numpy as np
high_school_comp = []
savings = []

for data in savings_data:
  if data[2] != 0:
    high_school_comp.append(float(data[2]))
    savings.append(float(data[0]))

correlation = np.corrcoef(high_school_comp,savings)
print(f"correlation between the person completed their high_school and their savings is-> {correlation[0,1]} ")

import plotly.figure_factory as ff

fig = ff.create_distplot([df["quant_saved"].tolist()],["savings"],show_hist=False)
fig.show()